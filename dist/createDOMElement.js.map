{"version":3,"file":"createDOMElement.js","sources":["../src/helpers/addChild.js","../src/createDOMElement.js"],"sourcesContent":["function addChild(element, child) {\r\n  if (typeof child === \"number\"\r\n    || typeof child === \"bigint\"\r\n    || child instanceof Date\r\n    || child instanceof RegExp) {\r\n    element.append(String(child))\r\n  }\r\n  else if (Array.isArray(child)) {\r\n    for (const childChild of child) {\r\n      addChild(element, childChild);\r\n    }\r\n  }\r\n  else if (typeof child !== \"undefined\"\r\n    && child !== null\r\n    && typeof child !== \"boolean\") {\r\n    element.append(child)\r\n  }\r\n}\r\n\r\nexport default addChild;","import addChild from './helpers/addChild.js';\r\n\r\nfunction createElement(tagName, props, ...children) {\r\n  tagName = tagName.toLowerCase();\r\n  const element = document.createElement(tagName);\r\n  for (let key in props) {\r\n    let value = props[key];\r\n    if (typeof value === \"string\") {\r\n      element.setAttribute(key, value)\r\n    }\r\n    else {\r\n      element[key] = value;\r\n    }\r\n  }\r\n  for (const child of children) {\r\n    addChild(element, child);\r\n  }\r\n  return element;\r\n}\r\n\r\nexport default createElement;"],"names":["addChild","element","child","Date","RegExp","append","String","Array","isArray","tagName","props","toLowerCase","document","createElement","key","value","setAttribute"],"mappings":"+zBAAA,SAASA,EAASC,EAASC,GACzB,GAAqB,iBAAVA,GACW,iBAAVA,GACPA,aAAiBC,MACjBD,aAAiBE,OACpBH,EAAQI,OAAOC,OAAOJ,YAEfK,MAAMC,QAAQN,GACrB,cAAyBA,kBACvBF,EAASC,gBAGJ,MAAOC,GAEM,kBAAVA,GACVD,EAAQI,OAAOH,kBCbnB,SAAuBO,EAASC,GAC9BD,EAAUA,EAAQE,cAClB,IAAMV,EAAUW,SAASC,cAAcJ,GACvC,IAAK,IAAIK,KAAOJ,EAAO,CACrB,IAAIK,EAAQL,EAAMI,GACG,iBAAVC,EACTd,EAAQe,aAAaF,EAAKC,GAG1Bd,EAAQa,GAAOC,EAGnB,yDAA8B,KAAnBb,UACTF,EAASC,EAASC,GAEpB,OAAOD"}